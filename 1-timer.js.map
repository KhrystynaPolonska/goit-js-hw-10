{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('[data-start]');\nconst dateInput = document.querySelector('#datetime-picker');\n\nlet selectedDate = null;\nlet timerId = null;\n\nstartBtn.disabled = true; // По умолчанию кнопка неактивна\n\nflatpickr(dateInput, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const now = new Date();\n    selectedDate = selectedDates[0];\n\n    if (selectedDate <= now) {\n      iziToast.error({ title: 'Error', message: 'Choose a future date' });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n});\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  dateInput.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const delta = selectedDate - now;\n\n    if (delta <= 0) {\n      clearInterval(timerId);\n      iziToast.success({ title: 'Done!', message: 'Timer completed ✅' });\n      dateInput.disabled = false;\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(delta);\n\n    document.querySelector('[data-days]').textContent = addLeadingZero(days);\n    document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n    document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n    document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  return {\n    days: Math.floor(ms / day),\n    hours: Math.floor((ms % day) / hour),\n    minutes: Math.floor((ms % hour) / minute),\n    seconds: Math.floor((ms % minute) / second),\n  };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["startBtn","dateInput","selectedDate","timerId","flatpickr","selectedDates","now","iziToast","delta","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"+IAMA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAY,SAAS,cAAc,kBAAkB,EAE3D,IAAIC,EAAe,KACfC,EAAU,KAEdH,EAAS,SAAW,GAEpBI,EAAUH,EAAW,CACnB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQI,EAAe,CACrB,MAAMC,EAAM,IAAI,KAChBJ,EAAeG,EAAc,CAAC,EAE1BH,GAAgBI,GAClBC,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,sBAAsB,CAAE,EAClEP,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,CACH,CAAC,EAEDA,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBC,EAAU,SAAW,GAErBE,EAAU,YAAY,IAAM,CAE1B,MAAMK,EAAQN,EADF,IAAI,KAGhB,GAAIM,GAAS,EAAG,CACd,cAAcL,CAAO,EACrBI,EAAS,QAAQ,CAAE,MAAO,QAAS,QAAS,mBAAmB,CAAE,EACjEN,EAAU,SAAW,GACrB,MACD,CAED,KAAM,CAAE,KAAAQ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAK,EAEzD,SAAS,cAAc,aAAa,EAAE,YAAcM,EAAeL,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcK,EAAeJ,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcI,EAAeH,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAeF,CAAO,CAC9E,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAUE,EAAI,CAMrB,MAAO,CACL,KAAM,KAAK,MAAMA,EAAK,KAAG,EACzB,MAAO,KAAK,MAAOA,EAAK,MAAO,IAAI,EACnC,QAAS,KAAK,MAAOA,EAAK,KAAQ,GAAM,EACxC,QAAS,KAAK,MAAOA,EAAK,IAAU,GAAM,CAC9C,CACA,CAEA,SAASD,EAAeE,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}